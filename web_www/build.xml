<?xml version="1.0" encoding="utf-8"?>
<project name="localemaps_www">
  <!--
  TODO:
  - Create target for solely deploying:
    - views (take argument)
    - controllers
      - have whether to update routes.php or not
    - models
  -->
  <property name="js.wrapper" value="(function(){%output%})();"/>
  <property name="apache_root_osx" location="/Applications/MAMP"/>
  <property name="apache_root_linux" location="/var/"/>
  <property name="closure_builder" location="static/js/lib/closure-library/closure/bin/build/closurebuilder.py"/>
  <macrodef name="build-macro" description="Creates www directory structure and copies/creates PHP and image files.">
    <attribute name="debug" default="FALSE"/>
    <sequential>
      <copy todir="${dist}/www">
        <fileset file="${cake}/.htaccess"/>
      </copy>
      <copy todir="${dist}/www/cake">
        <fileset dir="${cake}/cake"/>
      </copy>
      <copy todir="${dist}/www/app">
        <fileset file="${cake}/app/.htaccess"/>
        <fileset file="${cake}/app/app_controller.php"/>
        <fileset file="${cake}/app/app_helper.php"/>
        <fileset file="${cake}/app/app_model.php"/>
        <fileset file="${cake}/app/index.php"/>
      </copy>
      <mkdir dir="${dist}/www/app/config"/>
      <xmlproperty file="config/www_${env}.xml"/>
      <copy todir="${dist}/www/app/config">
        <fileset file="${cake}/app/config/*.php"/>
        <fileset file="web_www/config/*.php"/>
        <filterset>
          <filter token="DB_NAME" value="${config.database.name}"/>
          <filter token="DB_PASSWORD" value="${config.database.www_user.password}"/>
          <filter token="DB_PORT" value="${config.database.port}"/>
          <filter token="DB_SERVER" value="${config.database.server}"/>
          <filter token="DB_USER" value="${config.database.www_user.username}"/>
        </filterset>
      </copy>
      <copy todir="${dist}/www/app/controllers">
        <fileset dir="web_www/controllers"/>
      </copy>
      <copy todir="${dist}/www/app/models">
        <fileset dir="web_www/models"/>
      </copy>
      <mkdir dir="${dist}/www/app/tmp/cache/persistent"/>
      <mkdir dir="${dist}/www/app/tmp/cache/models"/>
      <copy todir="${dist}/www/app/views/elements">
        <fileset dir="web_www/views/elements"/>
      </copy>
      <copy todir="${dist}/www/app/views/layouts">
        <fileset dir="web_www/views/layouts"/>
      </copy>
      <copy todir="${dist}/www/app/views/www_actions">
        <fileset dir="web_www/views/www_actions"/>
        <filterset>
          <filter token="GOOGLE_API_KEY" value="${config.google.api_key}"/>
        </filterset>
      </copy>
      <copy todir="${dist}/www/app/webroot">
        <fileset file="${cake}/app/webroot/.htaccess"/>
        <fileset file="${cake}/app/webroot/css.php"/>
        <fileset file="${cake}/app/webroot/index.php"/>
      </copy>
      <copy todir="${dist}/www/app/webroot">
        <fileset file="static/img/favicon.ico"/>
      </copy>
      <copy todir="${dist}/www/app/webroot/img">
        <fileset dir="static/img"/>
      </copy>
      <condition property="apache_root_dir" value="${apache_root_osx}/htdocs">
        <os family="mac"/>
      </condition>
      <condition property="apache_root_dir" value="${apache_root_linux}/www">
        <os family="unix"/>
      </condition>
      <delete includeemptydirs="true" failonerror="false">
        <fileset dir="${apache_root_dir}"/>
      </delete>
      <symlink action="delete" link="${apache_root_dir}" failonerror="false"/>
      <delete dir="${apache_root_dir}" failonerror="false"/>
    </sequential>
  </macrodef>
  <macrodef name="build-css" description="Builds CSS files.">
    <sequential>
      <init-css/>
      <java
        jar="tools/yuicompressor-2.4.6.jar"
        fork="true"
        failonerror="true">
        <arg value="--type=css"/>
        <arg value="-o"/>
        <arg value="${dist}/www/app/webroot/css/default.css"/>
        <arg value="${build}/css/default.css"/>
      </java>
    </sequential>
  </macrodef>
  <macrodef name="build-css-debug" description="Builds CSS files (debug versions).">
    <sequential>
      <init-css/>
      <copy tofile="${dist}/www/app/webroot/css/default.css">
        <fileset file="${build}/css/default.css"/>
      </copy>
    </sequential>
  </macrodef>
  <macrodef name="init-css" description="Builds intermediate CSS files.">
    <sequential>
      <mkdir dir="${build}/css"/>
      <concat destfile="${build}/css/default.css">
        <filelist dir="static/css/www" files="default.css,locale_info.css"/>
      </concat>
      <mkdir dir="${dist}/www/app/webroot/css"/>
    </sequential>
  </macrodef>
  <macrodef name="build-js" description="Builds JS files.">
    <attribute name="debug" default="FALSE"/>
    <sequential>
      <mkdir dir="${dist}/www/app/webroot/js"/>
      <exec executable="${closure_builder}">
        <arg value="--root=static/js/apps/www"/>
        <arg value="--root=static/js/lib/closure-library"/>
        <arg value="--namespace=localemaps.www"/>
        <arg value="--output_mode=compiled"/>
        <arg value="--compiler_jar=tools/compiler.jar"/>
        <arg value="-f"/>
        <arg value="--externs=static/js/apps/www/externs.js"/>
        <arg value="-f"/>
        <arg value="--externs=static/js/lib/externs/google_loader_api.js"/>
        <arg value="-f"/>
        <arg value="--externs=static/js/lib/externs/google-maps-js-api-v3-externs.js"/>
        <arg value="-f"/>
        <arg value="--output_wrapper=${js.wrapper}"/>
        <arg value="-f"/>
        <arg value="--compilation_level=ADVANCED_OPTIMIZATIONS"/>
        <arg value="--output_file=${dist}/www/app/webroot/js/home_page.js"/>
      </exec>
    </sequential>
  </macrodef>
  <macrodef name="build-js-debug" description="Builds JS files (debug versions).">
    <attribute name="debug" default="FALSE"/>
    <sequential>
      <mkdir dir="${dist}/www/app/webroot/js"/>
      <exec executable="${closure_builder}">
        <arg value="--root=static/js/apps/www"/>
        <arg value="--root=static/js/lib/closure-library"/>
        <arg value="--namespace=localemaps.www"/>
        <arg value="--output_mode=compiled"/>
        <arg value="--compiler_jar=tools/compiler.jar"/>
        <arg value="-f"/>
        <arg value="--output_wrapper=${js.wrapper}"/>
        <arg value="-f"/>
        <arg value="--externs=static/js/apps/www/externs.js"/>
        <arg value="-f"/>
        <arg value="--externs=static/js/lib/externs/google_loader_api.js"/>
        <arg value="-f"/>
        <arg value="--externs=static/js/lib/externs/google-maps-js-api-v3-externs.js"/>
        <arg value="-f"/>
        <arg value="--formatting=PRETTY_PRINT"/>
        <arg value="--output_file=${dist}/www/app/webroot/js/home_page.js"/>
      </exec>
    </sequential>
  </macrodef>
  <target name="build">
    <build-macro/>
    <build-js/>
    <build-css/>
    <symlink link="${apache_root_dir}" resource="${dist}/www"/>
  </target>
  <target name="build-debug">
    <build-macro/>
    <build-js-debug/>
    <build-css-debug/>
    <symlink link="${apache_root_dir}" resource="${dist}/www"/>
  </target>
  <target name="build-css">
    <build-css/>
  </target>
  <target name="build-css-debug">
    <build-css-debug/>
  </target>
  <target name="build-js">
    <build-js/>
  </target>
  <target name="build-js-debug">
    <build-js-debug/>
  </target>
</project>
